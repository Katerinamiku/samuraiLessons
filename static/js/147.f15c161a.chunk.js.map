{"version":3,"file":"static/js/147.f15c161a.chunk.js","mappings":"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","sources":["webpack://samurai/./src/components/Users/Friends.module.scss?aec6","components/Users/Friends.tsx","components/Users/FriendsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"friendsBlock\":\"Friends_friendsBlock__VkOiC\",\"friendsTitle\":\"Friends_friendsTitle__Ck8js\",\"sadcat\":\"Friends_sadcat__FGWtU\",\"friendsList\":\"Friends_friendsList__KlZgj\",\"friendItem\":\"Friends_friendItem__yTZT+\",\"avaBtn\":\"Friends_avaBtn__-9tsR\",\"friendDescription\":\"Friends_friendDescription__yTvkv\",\"name\":\"Friends_name__YZEzh\",\"status\":\"Friends_status__PvlnO\"};","import React from 'react';\nimport userAvatar from \"../../common/images/userAvatar.png\";\nimport sadcat from \"../../common/images/sadcat.gif\";\nimport {UsersType} from \"../../Redux/reducers/FriendsReducer\";\nimport s from \"./Friends.module.scss\";\nimport {Pagination} from \"../Common/Pagination/Pagination\";\nimport {NavLink} from \"react-router-dom\";\nimport {Button} from \"../Common/Button/Button\";\n\n\ntype FriendPropsType = {\n    friends: Array<UsersType>\n    pageSize: number\n    totalFriendsCount: number\n    currentPage: number\n    onPageChanged: (p: number) => void\n    follow: (id: number) => void\n    unfollow: (id: number) => void\n    followingInProgress: number[]\n}\n\nconst Friends = (props: FriendPropsType) => {\n\n    if (!props.friends.length) {\n        return <div className={s.friendsTitle}>You have no cat-friends yet\n       <div><img src={sadcat} alt={'no friends'} className={s.sadcat}/></div>\n        </div>\n    }\n    return (\n        <div className={s.friendsBlock}>\n            <div className={s.friendsTitle}>My Friends</div>\n            <Pagination currentPage={props.currentPage}\n                        pageSize={props.pageSize}\n                        onPageChanged={props.onPageChanged}\n                        totalItemsCount={props.totalFriendsCount}\n                        portionSize={10}/>\n            <div className={s.friendsList}>\n                {props.friends.map(friend =>\n                    <div className={s.friendItem}>\n                        <div className={s.avaBtn}>\n                            <NavLink to={'/profile/' + friend.id}>\n                                <img className={s.avatar} alt={'avatar'}\n                                     src={friend.photos.small != null ? friend.photos.small : userAvatar}/>\n                            </NavLink>\n                            {friend.followed\n                                ? <Button name={'Unfollow'} size={'small'} callBack={() => props.unfollow(friend.id)}\n                                          disabled={props.followingInProgress.some((el) => el === friend.id)}/>\n                                : <Button size={'small'} name={'Follow'} callBack={() => {\n                                    props.follow(friend.id)\n                                }} disabled={props.followingInProgress.some(el => el === friend.id)}/>}\n                        </div>\n                        <div className={s.friendDescription}>\n                            <div className={s.name}>{friend.name}</div>\n                            <div className={s.status}>{friend.status}</div>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Friends;\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {RootStateType} from \"../../Redux/reduxStore\";\nimport { UsersType} from \"../../Redux/reducers/UsersReducer\";\nimport Friends from \"./Friends\";\nimport {follow, getFriends, unfollow} from \"../../Redux/reducers/FriendsReducer\";\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\nimport {compose} from \"redux\";\nimport {getFollowingInProgress} from \"../../Redux/reducers/usersSelectors\";\n\n//----------------------ClassCompContainer------------------------------\nclass FriendsContainer extends React.Component<FriendsPropsType> {\n\n    componentDidMount() {\n        const {currentPage, pageSize} = this.props;\n        this.props.getFriends(currentPage, pageSize);\n    }\n    onPageChanged = (page: number) => {\n        const {pageSize} = this.props;\n        this.props.getFriends(page, pageSize);\n    }\n    render() {\n        return <>\n            <Friends friends={this.props.friends}\n                     totalFriendsCount={this.props.totalFriendsCount}\n                     pageSize={this.props.pageSize}\n                     currentPage={this.props.currentPage}\n                     onPageChanged={this.onPageChanged}\n                     follow={this.props.follow}\n                     unfollow={this.props.unfollow}\n                     followingInProgress={this.props.followingInProgress}\n            />\n        </>\n    }\n}\n//---------------------HOC-----------------------\n//создаем HOC над ProfileContainer который будет делать редирект: конт комп над конт комп - и уже передаем крайний конт комп дальше в connect\n\n//------------------connect----------------------\nexport type FriendsPropsType = MapStateToPropsType & DispatchToPropsType;\ntype MapStateToPropsType = {\n    friends: Array<UsersType>\n    pageSize: number\n    totalFriendsCount: number\n    currentPage: number\n    followingInProgress: number[]\n}\ntype DispatchToPropsType = {\n    getFriends: (currentPage: number, pageSize: number) => void\n    follow: (id: number) => void\n    unfollow: (id: number) => void\n}\n\nconst mapStateToProps = (state: RootStateType): MapStateToPropsType => {\n    return {\n        friends: state.friends.friends,\n        pageSize: state.friends.pageSize,\n        totalFriendsCount: state.friends.totalFriendsCount,\n        currentPage: state.friends.currentPage,\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, {follow, unfollow, getFriends}),\n    withAuthRedirect)(FriendsContainer);\n"],"names":["props","friends","length","className","s","Pagination","currentPage","pageSize","onPageChanged","totalItemsCount","totalFriendsCount","portionSize","map","friend","to","id","alt","src","photos","small","userAvatar","followed","Button","name","size","callBack","unfollow","disabled","followingInProgress","some","el","follow","status","sadcat","FriendsContainer","page","getFriends","this","React","compose","connect","state","getFollowingInProgress","withAuthRedirect"],"sourceRoot":""}