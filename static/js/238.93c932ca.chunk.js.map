{"version":3,"file":"static/js/238.93c932ca.chunk.js","mappings":"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","sources":["HOC/withAuthRedirect.tsx","webpack://samurai/./src/components/Users/Friends.module.scss?aec6","components/Users/Friends.tsx","components/Users/FriendsContainer.tsx"],"sourcesContent":["import {Redirect} from \"react-router-dom\";\nimport React, {ComponentType} from \"react\";\nimport {connect} from \"react-redux\";\nimport {RootStateType} from \"../Redux/reduxStore\";\n\ntype MapStateToPropsType = {\n    isAuth: boolean\n}\nconst mapStateToProps = (state: RootStateType): MapStateToPropsType => {\n  return {\n      isAuth: state.auth.isAuth\n  }\n}\n\nexport function withAuthRedirect <T>(Component: ComponentType<T>) {\n    function RedirectComponent(props: MapStateToPropsType) {\n        let {isAuth, ...restProps} = props;\n        if (!isAuth) {\n            return <Redirect to={'/login'}/>\n        }\n        return <Component {...restProps as T}/>\n    }\n\n    let ConnectedRedirectComonent = connect(mapStateToProps)(RedirectComponent)\n\n    return ConnectedRedirectComonent;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"friendsTitle\":\"Friends_friendsTitle__Ck8js\",\"friendsBlock\":\"Friends_friendsBlock__VkOiC\",\"friendsList\":\"Friends_friendsList__KlZgj\",\"friendItem\":\"Friends_friendItem__yTZT+\",\"avaBtn\":\"Friends_avaBtn__-9tsR\",\"friendDescription\":\"Friends_friendDescription__yTvkv\",\"name\":\"Friends_name__YZEzh\",\"status\":\"Friends_status__PvlnO\"};","import React from 'react';\nimport userAvatar from \"../../common/images/userAvatar.png\";\nimport {UsersType} from \"../../Redux/reducers/FriendsReducer\";\nimport s from \"./Friends.module.scss\";\nimport {Pagination} from \"../Common/Pagination/Pagination\";\nimport {NavLink} from \"react-router-dom\";\nimport {Button} from \"../Common/Button/Button\";\n\n\ntype FriendPropsType = {\n    friends: Array<UsersType>\n    pageSize: number\n    totalFriendsCount: number\n    currentPage: number\n    onPageChanged: (p: number) => void\n    follow: (id: number) => void\n    unfollow: (id: number) => void\n    followingInProgress: number[]\n}\n\nconst Friends = (props: FriendPropsType) => {\n\n    if (!props.friends.length) {\n        return <div className={s.friendsTitle}>Friends not found</div>\n    }\n    return (\n        <div className={s.friendsBlock}>\n            <div className={s.friendsTitle}>My Friends</div>\n            <Pagination currentPage={props.currentPage}\n                        pageSize={props.pageSize}\n                        onPageChanged={props.onPageChanged}\n                        totalItemsCount={props.totalFriendsCount}\n                        portionSize={10}/>\n            <div className={s.friendsList}>\n                {props.friends.map(friend =>\n                    <div className={s.friendItem}>\n                        <div className={s.avaBtn}>\n                            <NavLink to={'/profile/' + friend.id}>\n                                <img className={s.avatar} alt={'avatar'}\n                                     src={friend.photos.small != null ? friend.photos.small : userAvatar}/>\n                            </NavLink>\n                            {friend.followed\n                                ? <Button name={'Unfollow'} size={'small'} callBack={() => props.unfollow(friend.id)}\n                                          disabled={props.followingInProgress.some((el) => el === friend.id)}/>\n                                : <Button size={'small'} name={'Follow'} callBack={() => {\n                                    props.follow(friend.id)\n                                }} disabled={props.followingInProgress.some(el => el === friend.id)}/>}\n                        </div>\n                        <div className={s.friendDescription}>\n                            <div className={s.name}>{friend.name}</div>\n                            <div className={s.status}>{friend.status}</div>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Friends;\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {RootStateType} from \"../../Redux/reduxStore\";\nimport { UsersType} from \"../../Redux/reducers/UsersReducer\";\nimport Friends from \"./Friends\";\nimport {follow, getFriends, unfollow} from \"../../Redux/reducers/FriendsReducer\";\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\nimport {compose} from \"redux\";\nimport {getFollowingInProgress} from \"../../Redux/reducers/usersSelectors\";\n\n//----------------------ClassCompContainer------------------------------\nclass FriendsContainer extends React.Component<FriendsPropsType> {\n\n    componentDidMount() {\n        const {currentPage, pageSize} = this.props;\n        this.props.getFriends(currentPage, pageSize);\n    }\n    onPageChanged = (page: number) => {\n        const {pageSize} = this.props;\n        this.props.getFriends(page, pageSize);\n    }\n    render() {\n        return <>\n            <Friends friends={this.props.friends}\n                     totalFriendsCount={this.props.totalFriendsCount}\n                     pageSize={this.props.pageSize}\n                     currentPage={this.props.currentPage}\n                     onPageChanged={this.onPageChanged}\n                     follow={this.props.follow}\n                     unfollow={this.props.unfollow}\n                     followingInProgress={this.props.followingInProgress}\n            />\n        </>\n    }\n}\n//---------------------HOC-----------------------\n//создаем HOC над ProfileContainer который будет делать редирект: конт комп над конт комп - и уже передаем крайний конт комп дальше в connect\n\n//------------------connect----------------------\nexport type FriendsPropsType = MapStateToPropsType & DispatchToPropsType;\ntype MapStateToPropsType = {\n    friends: Array<UsersType>\n    pageSize: number\n    totalFriendsCount: number\n    currentPage: number\n    followingInProgress: number[]\n}\ntype DispatchToPropsType = {\n    getFriends: (currentPage: number, pageSize: number) => void\n    follow: (id: number) => void\n    unfollow: (id: number) => void\n}\n\nconst mapStateToProps = (state: RootStateType): MapStateToPropsType => {\n    return {\n        friends: state.friends.friends,\n        pageSize: state.friends.pageSize,\n        totalFriendsCount: state.friends.totalFriendsCount,\n        currentPage: state.friends.currentPage,\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, {follow, unfollow, getFriends}),\n    withAuthRedirect)(FriendsContainer);\n"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","to","friends","length","className","s","Pagination","currentPage","pageSize","onPageChanged","totalItemsCount","totalFriendsCount","portionSize","map","friend","id","alt","src","photos","small","userAvatar","followed","Button","name","size","callBack","unfollow","disabled","followingInProgress","some","el","follow","status","FriendsContainer","page","getFriends","this","React","compose","getFollowingInProgress"],"sourceRoot":""}